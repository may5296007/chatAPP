openapi: 3.0.0
info:
  title: API BES Loan
  description: API pour le système de microservices BES Loan
  version: 1.0.0
servers:
  - url: /api
    description: Passerelle API BES Loan
paths:
  /auth/register:
    post:
      summary: Inscrire un nouvel utilisateur
      tags:
        - Authentification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
                - monthly_income
              properties:
                username:
                  type: string
                  example: johndoe
                email:
                  type: string
                  format: email
                  example: john@example.com
                password:
                  type: string
                  format: password
                  example: motDePasseSecurise123
                monthly_income:
                  type: number
                  minimum: 1200
                  example: 3500
      responses:
        201:
          description: Utilisateur inscrit avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        400:
          description: Données d'entrée invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /auth/login:
    post:
      summary: Connecter un utilisateur existant
      tags:
        - Authentification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: johndoe
                password:
                  type: string
                  format: password
                  example: motDePasseSecurise123
      responses:
        200:
          description: Utilisateur connecté avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        401:
          description: Identifiants invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /loans:
    post:
      summary: Créer une nouvelle demande de prêt
      tags:
        - Prêts
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - purpose
                - due_date
              properties:
                amount:
                  type: number
                  minimum: 100
                  maximum: 5000
                  example: 2000
                purpose:
                  type: string
                  example: "Rénovation de maison"
                due_date:
                  type: string
                  format: date
                  example: "2026-01-01"
      responses:
        201:
          description: Demande de prêt créée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        400:
          description: Données d'entrée invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    get:
      summary: Obtenir tous les prêts de l'utilisateur authentifié
      tags:
        - Prêts
      security:
        - BearerAuth: []
      responses:
        200:
          description: Liste des prêts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Loan'
        401:
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /loans/{id}:
    get:
      summary: Obtenir un prêt spécifique par son ID
      tags:
        - Prêts
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID du prêt
      responses:
        200:
          description: Détails du prêt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        401:
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Interdit - Le prêt appartient à un autre utilisateur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Prêt non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /loans/{id}/payment:
    put:
      summary: Mettre à jour le montant restant d'un prêt suite à un paiement direct
      tags:
        - Prêts
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID du prêt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
              properties:
                amount:
                  type: number
                  minimum: 0.01
                  example: 200
      responses:
        200:
          description: Montant restant du prêt mis à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        400:
          description: Données d'entrée invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Prêt non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /loans/{id}/status:
    put:
      summary: Mettre à jour le statut d'un prêt
      tags:
        - Prêts
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID du prêt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: [pending, approved, active, paid]
                  example: active
      responses:
        200:
          description: Statut du prêt mis à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        400:
          description: Données d'entrée invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Prêt non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /payments:
    post:
      summary: Effectuer un paiement pour un prêt
      tags:
        - Paiements
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - loan_id
                - amount
                - payment_method
              properties:
                loan_id:
                  type: integer
                  example: 1
                amount:
                  type: number
                  minimum: 0.01
                  example: 200
                payment_method:
                  type: string
                  enum: [credit_card, debit_card, bank_transfer]
                  example: credit_card
      responses:
        201:
          description: Paiement traité avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        400:
          description: Données d'entrée invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Prêt non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    get:
      summary: Obtenir l'historique des paiements de l'utilisateur authentifié
      tags:
        - Paiements
      security:
        - BearerAuth: []
      responses:
        200:
          description: Liste des paiements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
        401:
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /payments/loan/{loanId}:
    get:
      summary: Obtenir les paiements pour un prêt spécifique
      tags:
        - Paiements
      security:
        - BearerAuth: []
      parameters:
        - name: loanId
          in: path
          required: true
          schema:
            type: integer
          description: ID du prêt
      responses:
        200:
          description: Liste des paiements pour le prêt
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
        401:
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Interdit - Le prêt appartient à un autre utilisateur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Prêt non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          example: johndoe
        email:
          type: string
          format: email
          example: john@example.com
        monthly_income:
          type: number
          example: 3500
    
    AuthResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
    
    Loan:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 1
        amount:
          type: number
          example: 2000
        remaining_amount:
          type: number
          example: 1800
        purpose:
          type: string
          example: Rénovation de maison
        loan_date:
          type: string
          format: date
          example: "2025-05-01"
        due_date:
          type: string
          format: date
          example: "2026-05-01"
        status:
          type: string
          enum: [pending, approved, rejected, active, paid]
          example: active
        created_at:
          type: string
          format: date-time
          example: "2025-05-01T12:00:00Z"
    
    Payment:
      type: object
      properties:
        id:
          type: integer
          example: 1
        loan_id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 1
        amount:
          type: number
          example: 200
        payment_date:
          type: string
          format: date-time
          example: "2025-05-05T15:30:00Z"
        payment_method:
          type: string
          enum: [credit_card, debit_card, bank_transfer]
          example: credit_card
        transaction_id:
          type: string
          example: 8a7b6c5d4e3f2g1h
    
    Error:
      type: object
      properties:
        error:
          type: string
          example: Données d'entrée invalides
        errors:
          type: array
          items:
            type: object
            properties:
              param:
                type: string
                example: amount
              msg:
                type: string
                example: Le montant du prêt doit être entre 100$ et 5000$